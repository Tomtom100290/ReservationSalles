name: 🧪 Tests Backend (Tags)

on:
  push:
    tags:
      - 'v*.*.*'  # Déclenchement pour v1.0.0, v2.1.3, etc.

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    defaults:
      run:
        working-directory: backend

    steps:
      - name: 📥 Checkout du code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: 📦 Installer les dépendances
        run: npm install

      - name: 🧪 Lancer les tests
        env:
          DATABASE_URL: postgresql://admin:password123@postgres:5432/reservations
          NODE_ENV: test
        run: npm test

      - name: ✅ Tests réussis
        run: echo "✅ Tests backend passés pour ${{ github.ref_name }}"

  # Build Docker après succès des tests
  build:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout du code
        uses: actions/checkout@v4

      - name: 🐳 Build Docker image
        run: docker build -t reservation-backend:${{ github.ref_name }} -f backend/Dockerfile ./backend

      - name: ✅ Build réussi
        run: echo "✅ Image Docker créée pour ${{ github.ref_name }}"